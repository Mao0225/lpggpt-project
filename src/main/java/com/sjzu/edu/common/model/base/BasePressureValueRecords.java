package com.sjzu.edu.common.model.base;

import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.IBean;

/**
 * Generated by JFinal, do not modify this file.
 */
@SuppressWarnings("serial")
public abstract class BasePressureValueRecords<M extends BasePressureValueRecords<M>> extends Model<M> implements IBean {

	/**
	 * 无符号自增，主键
	 */
	public void setId(java.lang.Long id) {
		set("id", id);
	}
	
	/**
	 * 无符号自增，主键
	 */
	public java.lang.Long getId() {
		return getLong("id");
	}
	
	/**
	 * 外键，当前所属用户/饭店id，非空。
默认系统管理员id为1，库存管理id为2，下同。
	 */
	public void setAffiliationUserId(java.lang.Integer affiliationUserId) {
		set("affiliation_user_id", affiliationUserId);
	}
	
	/**
	 * 外键，当前所属用户/饭店id，非空。
默认系统管理员id为1，库存管理id为2，下同。
	 */
	public java.lang.Integer getAffiliationUserId() {
		return getInt("affiliation_user_id");
	}
	
	/**
	 * 外键，当前储气瓶id，可空
	 */
	public void setGasCylinderId(java.lang.Integer gasCylinderId) {
		set("gas_cylinder_id", gasCylinderId);
	}
	
	/**
	 * 外键，当前储气瓶id，可空
	 */
	public java.lang.Integer getGasCylinderId() {
		return getInt("gas_cylinder_id");
	}
	
	/**
	 * 外键，当前压力表id，可空
	 */
	public void setPressureGaugeId(java.lang.Integer pressureGaugeId) {
		set("pressure_gauge_id", pressureGaugeId);
	}
	
	/**
	 * 外键，当前压力表id，可空
	 */
	public java.lang.Integer getPressureGaugeId() {
		return getInt("pressure_gauge_id");
	}
	
	/**
	 * 压力表上传的控制器号，唯一标识，可做外键
	 */
	public void setControllerId(java.lang.String controllerId) {
		set("controller_id", controllerId);
	}
	
	/**
	 * 压力表上传的控制器号，唯一标识，可做外键
	 */
	public java.lang.String getControllerId() {
		return getStr("controller_id");
	}
	
	/**
	 * 10.2浮点，非空，压力表读数，压力表上传的标况累计量
	 */
	public void setStandardConditionAccumulated(java.lang.Float standardConditionAccumulated) {
		set("standard_condition_accumulated", standardConditionAccumulated);
	}
	
	/**
	 * 10.2浮点，非空，压力表读数，压力表上传的标况累计量
	 */
	public java.lang.Float getStandardConditionAccumulated() {
		return getFloat("standard_condition_accumulated");
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的工况累计量
	 */
	public void setWorkingConditionAccumulated(java.lang.Float workingConditionAccumulated) {
		set("working_condition_accumulated", workingConditionAccumulated);
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的工况累计量
	 */
	public java.lang.Float getWorkingConditionAccumulated() {
		return getFloat("working_condition_accumulated");
	}
	
	/**
	 * 压力表上传的阀门状态
	 */
	public void setValveStatus(java.lang.String valveStatus) {
		set("valve_status", valveStatus);
	}
	
	/**
	 * 压力表上传的阀门状态
	 */
	public java.lang.String getValveStatus() {
		return getStr("valve_status");
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的电池电压
	 */
	public void setBatteryVoltage(java.lang.Float batteryVoltage) {
		set("battery_voltage", batteryVoltage);
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的电池电压
	 */
	public java.lang.Float getBatteryVoltage() {
		return getFloat("battery_voltage");
	}
	
	/**
	 * 压力表上传的表内时间
	 */
	public void setInMeterDatetime(java.lang.String inMeterDatetime) {
		set("in_meter_datetime", inMeterDatetime);
	}
	
	/**
	 * 压力表上传的表内时间
	 */
	public java.lang.String getInMeterDatetime() {
		return getStr("in_meter_datetime");
	}
	
	/**
	 * 压力表上传的抄表时间
	 */
	public void setMeterReadingDatetime(java.lang.String meterReadingDatetime) {
		set("meter_reading_datetime", meterReadingDatetime);
	}
	
	/**
	 * 压力表上传的抄表时间
	 */
	public java.lang.String getMeterReadingDatetime() {
		return getStr("meter_reading_datetime");
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的温度
	 */
	public void setTemperature(java.lang.Float temperature) {
		set("temperature", temperature);
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的温度
	 */
	public java.lang.Float getTemperature() {
		return getFloat("temperature");
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的压力
	 */
	public void setPressure(java.lang.Float pressure) {
		set("pressure", pressure);
	}
	
	/**
	 * 10.2浮点，非空，压力表上传的压力
	 */
	public java.lang.Float getPressure() {
		return getFloat("pressure");
	}
	
	/**
	 * 压力表上传的表内运行状态
	 */
	public void setMeterOperatingStatus(java.lang.String meterOperatingStatus) {
		set("meter_operating_status", meterOperatingStatus);
	}
	
	/**
	 * 压力表上传的表内运行状态
	 */
	public java.lang.String getMeterOperatingStatus() {
		return getStr("meter_operating_status");
	}
	
	/**
	 * 外键，用户id，非空，首次创建记录时写入
	 */
	public void setCreatedId(java.lang.Integer createdId) {
		set("created_id", createdId);
	}
	
	/**
	 * 外键，用户id，非空，首次创建记录时写入
	 */
	public java.lang.Integer getCreatedId() {
		return getInt("created_id");
	}
	
	/**
	 * 非空，首次创建记录时写入数据库服务器时间
	 */
	public void setCreatedTime(java.lang.String createdTime) {
		set("created_time", createdTime);
	}
	
	/**
	 * 非空，首次创建记录时写入数据库服务器时间
	 */
	public java.lang.String getCreatedTime() {
		return getStr("created_time");
	}
	
	/**
	 * 外键，用户id，非空，每次操作记录时写入。
	 */
	public void setUpdatedId(java.lang.Integer updatedId) {
		set("updated_id", updatedId);
	}
	
	/**
	 * 外键，用户id，非空，每次操作记录时写入。
	 */
	public java.lang.Integer getUpdatedId() {
		return getInt("updated_id");
	}
	
	/**
	 * 非空，每次操作记录时写入数据库服务器时间。
	 */
	public void setUpdatedTime(java.util.Date updatedTime) {
		set("updated_time", updatedTime);
	}
	
	/**
	 * 非空，每次操作记录时写入数据库服务器时间。
	 */
	public java.util.Date getUpdatedTime() {
		return getDate("updated_time");
	}
	
	/**
	 * 可null。为null时表示逻辑存在，写入操作时服务器时间表示逻辑删除。
	 */
	public void setDeletedTime(java.util.Date deletedTime) {
		set("deleted_time", deletedTime);
	}
	
	/**
	 * 可null。为null时表示逻辑存在，写入操作时服务器时间表示逻辑删除。
	 */
	public java.util.Date getDeletedTime() {
		return getDate("deleted_time");
	}
	
	/**
	 * 燃气表的上传的信号强度
	 */
	public void setSignallevel(java.lang.String signallevel) {
		set("signallevel", signallevel);
	}
	
	/**
	 * 燃气表的上传的信号强度
	 */
	public java.lang.String getSignallevel() {
		return getStr("signallevel");
	}
	
	/**
	 * 原因标志位
	 */
	public void setTerminalreporttype(java.lang.String terminalreporttype) {
		set("terminalreporttype", terminalreporttype);
	}
	
	/**
	 * 原因标志位
	 */
	public java.lang.String getTerminalreporttype() {
		return getStr("terminalreporttype");
	}
	
	public void setHttemparr(java.lang.String httemparr) {
		set("httemparr", httemparr);
	}
	
	public java.lang.String getHttemparr() {
		return getStr("httemparr");
	}
	
	/**
	 * 剩余金额
	 */
	public void setShengyujine(java.lang.String shengyujine) {
		set("shengyujine", shengyujine);
	}
	
	/**
	 * 剩余金额
	 */
	public java.lang.String getShengyujine() {
		return getStr("shengyujine");
	}
	
}

